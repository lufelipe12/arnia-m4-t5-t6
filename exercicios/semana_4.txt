SEMANA 4.

25/03.

1- Ainda sobre o projeto criado anteriormente.

a) Crie um método no service de users para buscar um user pelo email, retornando também a senha.
b) Adicione o bcrypt para encriptar o password usando @BeforeInsert
c) Crie um módulo para auth.
d) Crie um controller e um service para auth.

** Crie uma rota para login, retornando um JWT token. Utilize o @nestjs/jwt.

26/03.

Ainda sobre o projeto criado anteriormente...

1-

a) Crie uma nova entidade Address (id, street, city, zipCode).
b) Rode o projeto e verifique se tabela foi criada corretamente.
c) Crie uma nova resource de Adresses.
d) Crie uma rota de post de Adresses (faça validações no dto).
e) Crie uma rota de patch de Adresses

** Desafio -> Crie um auth guard para proteção das rotas.
** Desafio -> Crie uma rota GET -> /users/profile utilizando o guard para retornar informações do usuário contido no token.

27/03.

1- Ainda sobre o projeto criado anteriormente.

a) Crie uma rota para buscar todos Adresses.
b) Adicione na entidade Adress o relacionamento 1:1 com user (não pode ser nulo)
c) Na rota profile do user, modifique para juntamente voltar o Adress do mesmo. (dica: typeORM relations)

** Desafio -> Crie uma nova entidade Pet (id, name, age, breed -> todos obrigatórios e user (relacionamento N:1) -> não pode ser nulo)

28/03.

1- Ainda sobre o projeto criado anteriormente.

a) Rode o projeto e verifique se tabela Pet foi criada corretamente.
b) Crie uma rota para criação de Pets.
c) Crie uma rota para buscar um pet pelo id, voltando também as informações do usuário relacionado.
d) Modifique a rota de patch de Adresses para que somente o user pertencente ao Address possa modificá-lo.

2- 

a) Crie uma rota de get -> /pets que retorna todos os pets juntamente com uma query para filtrá-los pela breed.
b) Na rota de get profile adicione também as informações dos pets do usuário logado.
c) Faça uma rota para update de pets. Obs: Somente o usuário dono do pet pode modificá-lo.
d) Faça uma rota de get -> /pets/my-pets que retorna somente os pets do usuário logado.

** Desafio -> Documente as rotas criadas até agora com Swagger.